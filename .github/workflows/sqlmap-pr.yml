name: SQLMap Penetration Testing

on:
  push:
    paths:
      - 'POST_TEST/*.txt'
      - 'GET_TEST/*.txt'
      - 'PUT_TEST/*.txt'
      - 'PATCH_TEST/*.txt'
      - 'DELETE_TEST/*.txt'

jobs:
  sqlmap-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Extract .txt files from commit
        id: txt_files
        run: |
          echo "Commit SHA: ${{ github.sha }}"
          file_list=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          echo "All changed files:"
          echo "$file_list"
          txt_files=$(echo "$file_list" | grep '\.txt$')
          echo "Filtered TXT files:"
          echo "$txt_files"
          echo "$txt_files" > ${{ runner.temp }}/txt_files.txt
          echo "TXTFILES<<EOF" >> $GITHUB_ENV
          cat ${{ runner.temp }}/txt_files.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
  
      - name: Run sqlmap on each .txt file
        run: |
          IFS=$'\n' read -d '' -a file_array <<< "${{ env.TXTFILES }}"
          for file in "${file_array[@]}"; do
            echo "Testing file: $file"
            if [[ "$file" =~ ^(POST_TEST|GET_TEST|PUT_TEST|PATCH_TEST|DELETE_TEST)/.*\.txt$ ]]; then
              echo "Running sqlmap on $file"
              if [ -f "/home/runner/work/sqlmap/sqlmap/$file" ]; then
                python sqlmap.py -r "/home/runner/work/sqlmap/sqlmap/$file" --batch --random-agent
              else
                echo "Error: File not found /home/runner/work/sqlmap/sqlmap/$file"
              fi
            else
              echo "Skipped: $file (does not match required paths)"
            fi
          done